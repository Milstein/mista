/* Generated By:JavaCC: Do not edit this line. MIDParserConstants.java */
package parser;


/**
 * Token literal values and constants.
 * Generated by org.javacc.parser.OtherFilesGen#start()
 */
public interface MIDParserConstants {

  /** End of File. */
  int EOF = 0;
  /** RegularExpression Id. */
  int SINGLE_LINE_COMMENT = 8;
  /** RegularExpression Id. */
  int NOT = 9;
  /** RegularExpression Id. */
  int SEQUENCE = 10;
  /** RegularExpression Id. */
  int INIT = 11;
  /** RegularExpression Id. */
  int TEST = 12;
  /** RegularExpression Id. */
  int FRAMEWORK = 13;
  /** RegularExpression Id. */
  int IDENTIFIER = 14;
  /** RegularExpression Id. */
  int SPECIALVAR = 15;
  /** RegularExpression Id. */
  int SYMBOL = 16;
  /** RegularExpression Id. */
  int LETTER = 17;
  /** RegularExpression Id. */
  int DIGIT = 18;
  /** RegularExpression Id. */
  int STRING = 19;
  /** RegularExpression Id. */
  int LPAREN = 20;
  /** RegularExpression Id. */
  int RPAREN = 21;
  /** RegularExpression Id. */
  int LARROW = 22;
  /** RegularExpression Id. */
  int RARROW = 23;
  /** RegularExpression Id. */
  int LBRACE = 24;
  /** RegularExpression Id. */
  int RBRACE = 25;
  /** RegularExpression Id. */
  int LBRACKET = 26;
  /** RegularExpression Id. */
  int RBRACKET = 27;
  /** RegularExpression Id. */
  int SEMICOLON = 28;
  /** RegularExpression Id. */
  int DOT = 29;
  /** RegularExpression Id. */
  int UNDERSCORE = 30;
  /** RegularExpression Id. */
  int COMMA = 31;
  /** RegularExpression Id. */
  int COLON = 32;
  /** RegularExpression Id. */
  int SLASH = 33;

  /** Lexical state. */
  int DEFAULT = 0;
  /** Lexical state. */
  int WithinComment = 1;

  /** Literal token values. */
  String[] tokenImage = {
    "<EOF>",
    "\"\\t\"",
    "\"/*\"",
    "\" \"",
    "\"\\n\"",
    "\"\\r\"",
    "\"*/\"",
    "<token of kind 7>",
    "<SINGLE_LINE_COMMENT>",
    "\"not\"",
    "\"Sequence\"",
    "\"init\"",
    "\"test\"",
    "\"framework\"",
    "<IDENTIFIER>",
    "<SPECIALVAR>",
    "<SYMBOL>",
    "<LETTER>",
    "<DIGIT>",
    "<STRING>",
    "\"(\"",
    "\")\"",
    "\"<\"",
    "\">\"",
    "\"{\"",
    "\"}\"",
    "\"[\"",
    "\"]\"",
    "\";\"",
    "\".\"",
    "\"_\"",
    "\",\"",
    "\":\"",
    "\"/\"",
    "\"-\"",
    "\"=\"",
    "\"<>\"",
    "\"!=\"",
    "\">=\"",
    "\"<=\"",
    "\"+\"",
    "\"*\"",
    "\"%\"",
    "\"&\"",
    "\"->\"",
    "\"=>\"",
  };

}
